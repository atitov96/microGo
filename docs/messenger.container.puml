@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(user, "User", "A user of the messenger application")
System_Boundary(c1, "Messenger System") {
    Container(api_gateway, "API Gateway", "Go", "Routes and authenticates API requests")
    Container(auth_service, "Auth Service", "Go", "Handles user authentication")
    Container(user_service, "User Service", "Go", "Manages user profiles")
    Container(friend_service, "Friend Service", "Go", "Manages friend relationships")
    Container(message_service, "Message Service", "Go", "Handles messaging functionality")
    ContainerDb(auth_db, "Auth DB", "PostgresSQL", "Stores authentication data")
    ContainerDb(user_db, "User DB", "MongoDB", "Stores user profiles")
    ContainerDb(friend_db, "Friend DB", "Neo4j / PostgresSQL + pgvector", "Stores friend relationships")
    ContainerDb(message_db, "Message DB", "ScyllaDB", "Stores user messages")
    Container(message_queue, "Message Queue", "Apache Kafka", "Handles asynchronous communication between services")
}

System_Ext(email_system, "E-mail System", "The internal Microsoft Exchange e-mail system")
System_Ext(oauth, "OAuth Provider", "External OAuth provider for authentication")

Rel(user, api_gateway, "Uses", "HTTPS")
Rel(api_gateway, auth_service, "Uses", "HTTPS")
Rel(api_gateway, user_service, "Uses", "HTTPS")
Rel(api_gateway, friend_service, "Uses", "HTTPS")
Rel(api_gateway, message_service, "Uses", "HTTPS")

Rel(auth_service, auth_db, "Reads from and writes to")
Rel(user_service, user_db, "Reads from and writes to")
Rel(friend_service, friend_db, "Reads from and writes to")
Rel(message_service, message_db, "Reads from and writes to")

Rel(auth_service, message_queue, "Publishes to and subscribes from")
Rel(user_service, message_queue, "Publishes to and subscribes from")
Rel(friend_service, message_queue, "Publishes to and subscribes from")
Rel(message_service, message_queue, "Publishes to and subscribes from")

Rel(auth_service, email_system, "Sends e-mails using")
Rel(auth_service, oauth, "Authenticates using")
@enduml